class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
/*
okay so the whole idea is we get the value of the middle element in the array
if target smaller go search right, else search left

*/        
int s = nums.size();//array size
int m = (s%2==0)? (s/2)-1:s/2;//middle

//if target is gonna be first
if(target<nums[0]){
    return 0;
}
//if target is gonna be last
else if(target>nums[s-1]){
    return s;
    }

else{
//this part searches for it
if(target > nums[m]){
    //go left
for(int i = m+1;i<s;++i){
    if(nums[i]==target){
        return i;
    }
}
}
else if (target<nums[m]){
    //go right
for(int i = 0;i<m;++i){
    if(nums[i]==target){
        return i;
    }
}
}
else {
//target is at m
return m;
}

// if we reached here this means that we didnt find our target
// so we give the hypothetical index if we wanna put that number
//same code but we compare each 2
  
if(target > nums[m]){
    //go left
for(int i = m;i<s-1;++i){
    if(target>nums[i] && target<nums[i+1]){
        return i+1;
    }
}
}
else if (target<nums[m]){
    //go right
for(int i = 0;i<m;++i){
    if(target>nums[i] && target<nums[i+1]){
        return i+1;
    }
}
    }
}
return 0;
}    
};
